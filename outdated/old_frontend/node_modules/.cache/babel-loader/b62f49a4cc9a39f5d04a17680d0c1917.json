{"ast":null,"code":"var _jsxFileName = \"/Users/faizarali/Desktop/RonaCards/frontend/src/App.js\";\nimport ReactReact, { useState, userEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport Dashboard from \"./containers/Dashboard\";\nimport Register from \"./containers/Register\";\nimport Login from \"./containers/Login\";\nimport ForgotPassword from \"./containers/ForgotPassword\";\nimport UserContext from \"./context/UserContext\";\nimport MainPage from './containers/MainPage';\nexport default function App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  });\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n\n      const tokenRes = await Axios.post(\"http://rona.cards:4000/users/tokenIsValid\", null, {\n        headers: {\n          \"x-auth-token\": token\n        }\n      });\n\n      if (tokenRes.data) {\n        const userRes = await Axios.get(\"http://rona.cards:4000/users/\", {\n          headers: {\n            \"x-auth-token\": token\n          }\n        });\n        setUserData({\n          token,\n          user: userRes.data\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      userData,\n      setUserData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: MainPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    component: Register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/passwordReset\",\n    component: ForgotPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/faizarali/Desktop/RonaCards/frontend/src/App.js"],"names":["ReactReact","useState","userEffect","BrowserRouter","Switch","Route","Axios","Dashboard","Register","Login","ForgotPassword","UserContext","MainPage","App","userData","setUserData","token","undefined","user","useEffect","checkLoggedIn","localStorage","getItem","setItem","tokenRes","post","headers","data","userRes","get"],"mappings":";AAAA,OAAOA,UAAP,IAAqBC,QAArB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC;AACvCe,IAAAA,KAAK,EAAEC,SADgC;AAEvCC,IAAAA,IAAI,EAAED;AAFiC,GAAD,CAAxC;AAKAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,aAAa,GAAG,YAAY;AAChC,UAAIJ,KAAK,GAAGK,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAZ;;AACA,UAAIN,KAAK,KAAK,IAAd,EAAoB;AAClBK,QAAAA,YAAY,CAACE,OAAb,CAAqB,YAArB,EAAmC,EAAnC;AACAP,QAAAA,KAAK,GAAG,EAAR;AACD;;AACD,YAAMQ,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CACrB,2CADqB,EAErB,IAFqB,EAGrB;AAAEC,QAAAA,OAAO,EAAE;AAAE,0BAAgBV;AAAlB;AAAX,OAHqB,CAAvB;;AAKA,UAAIQ,QAAQ,CAACG,IAAb,EAAmB;AACjB,cAAMC,OAAO,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAU,+BAAV,EACpB;AACEH,UAAAA,OAAO,EAAE;AAAE,4BAAgBV;AAAlB;AADX,SADoB,CAAtB;AAIAD,QAAAA,WAAW,CAAC;AACVC,UAAAA,KADU;AAEVE,UAAAA,IAAI,EAAEU,OAAO,CAACD;AAFJ,SAAD,CAAX;AAID;AACF,KArBD;;AAuBAP,IAAAA,aAAa;AACd,GAzBQ,EAyBN,EAzBM,CAAT;AA2BA,sBACE,uDACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEN,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEH,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEH,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAED,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,gBAAZ;AAA6B,IAAA,SAAS,EAAEE,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,CADF,CADF;AAiBD","sourcesContent":["import ReactReact, { useState, userEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport Dashboard from \"./containers/Dashboard\";\nimport Register from \"./containers/Register\";\nimport Login from \"./containers/Login\";\nimport ForgotPassword from \"./containers/ForgotPassword\";\nimport UserContext from \"./context/UserContext\";\n\nimport MainPage from './containers/MainPage';\n\nexport default function App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n      const tokenRes = await Axios.post(\n        \"http://rona.cards:4000/users/tokenIsValid\",\n        null,\n        { headers: { \"x-auth-token\": token } }\n      );\n      if (tokenRes.data) {\n        const userRes = await Axios.get(\"http://rona.cards:4000/users/\",\n          {\n            headers: { \"x-auth-token\": token },\n          });\n        setUserData({\n          token,\n          user: userRes.data,\n        })\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  return (\n    <>\n      <BrowserRouter>\n        <UserContext.Provider value={{ userData, setUserData }}>\n          <Switch>\n            <Route exact path=\"/\" component={MainPage} />\n            {/* <Route  path=\"/dashboard\" component={Dashboard} /> */}\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/passwordReset\" component={ForgotPassword} />\n\n          </Switch>\n        </UserContext.Provider>\n      </BrowserRouter>\n    </>\n  )\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}